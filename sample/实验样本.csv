pid1,pid2,title1,title2,abs1,abs2,label1,label2,subgraph_1hop,subgraph_2hop,subgraph_1hop_title,subgraph_2hop_title,link,baseline,LP,P1,P2,P3,vote
35,1033,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: The Evolutionary Cost of Learning,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Traits that are acquired by members of an evolving population during their lifetime, through adaptive processes such as learning, can become genetically specified in later generations. Thus there is a change in the level of learning in the population over evolutionary time. This paper explores the idea that as well as the benefits to be gained from learning, there may also be costs to be paid for the ability to learn. It is these costs that supply the selection pressure for the genetic assimilation of acquired traits. Two models are presented that attempt to illustrate this assertion. The first uses Kauffman's NK fitness landscapes to show the effect that both explicit and implicit costs have on the assimilation of learnt traits. A characteristic `hump' is observed in the graph of the level of plasticity in the population showing that learning is first selected for and then against as evolution progresses. The second model is a practical example in which neural network controllers are evolved for a small mobile robot. Results from this experiment also show the hump.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 35, 45605, 41714, 35], [35, 35, 35, 210871, 41714, 1033, 1033, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 240791, 32083, 44514, 35061, 35, 45605, 35, 41714, 210871, 44455, 273152, 35061, 35, 45605, 32083, 41714, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 45605, 35061, 210871, 45605, 273152, 240791, 35061, 44455, 273152, 41714, 210871, 240791, 41714, 1033, 45605, 1033, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: The Evolutionary Cost of Learning, category:Genetic_Algorithms', 'Title: The Evolutionary Cost of Learning, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Back Propagation is Sensitive to Initial Conditions, category:Neural_Networks', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolving Visually Guided Robots, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Back Propagation is Sensitive to Initial Conditions, category:Neural_Networks', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolving Visually Guided Robots, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Issues in Evolutionary Robotics, category:Genetic_Algorithms', 'Title: The Evolutionary Cost of Learning, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: The Evolutionary Cost of Learning, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",1,1,0,1,1,1,1
35,662416,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: USING SMOOTHING SPLINE ANOVA TO EXAMINE THE RELATION OF RISK FACTORS TO THE INCIDENCE AND,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: This paper presents recent developments toward a formalism that combines useful properties of both logic and probabilities. Like logic, the formalism admits qualitative sentences and provides symbolic machinery for deriving deductively closed beliefs and, like probability, it permits us to express if-then rules with different levels of firmness and to retract beliefs in response to changing observations. Rules are interpreted as order-of-magnitude approximations of conditional probabilities which impose constraints over the rankings of worlds. Inferences are supported by a unique priority ordering on rules which is syntactically derived from the knowledge base. This ordering accounts for rule interactions, respects specificity considerations and facilitates the construction of coherent states of beliefs. Practical algorithms are developed and analyzed for testing consistency, computing rule ordering, and answering queries. Imprecise observations are incorporated using qualitative versions of Jef-frey's Rule and Bayesian updating, with the result that coherent belief revision is embodied naturally and tractably. Finally, causal rules are interpreted as imposing Markovian conditions that further constrain world rankings to reflect the modularity of causal organizations. These constraints are shown to facilitate reasoning about causal projections, explanations, actions and change.",Genetic_Algorithms,Probabilistic_Methods,"[[6910, 82920, 263553, 210871, 210872, 210872, 12631, 12631, 12638, 12638, 6910, 12631, 12638, 263553, 35], [263553, 35, 662416, 35, 35, 210871, 6910, 12638, 6910, 263553, 662416, 662416, 662416, 6910, 210871]]","[[6910, 82920, 263553, 210871, 82920, 210872, 210872, 210872, 12631, 35061, 12631, 44514, 12638, 35, 12631, 12638, 6910, 6898, 444191, 35, 210871, 6898, 12631, 273152, 12638, 263553, 35, 12638], [263553, 35, 662416, 35, 273152, 35, 210871, 273152, 6910, 210871, 12638, 210871, 6910, 273152, 6898, 263553, 662416, 6910, 6910, 35061, 273152, 12631, 662416, 210871, 662416, 6910, 210871, 6898]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,0,0,0,0,0
35,103515,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Genetic algorithms (GAs) play a major role in many artificial-life systems, but there is often little detailed understanding of why the GA performs as it does, and little theoretical basis on which to characterize the types of fitness landscapes that lead to successful GA performance. In this paper we propose a strategy for addressing these issues. Our strategy consists of defining a set of features of fitness landscapes that are particularly relevant to the GA, and experimentally studying how various configurations of these features affect the GA's performance along a number of dimensions. In this paper we informally describe an initial set of proposed feature classes, describe in detail one such class (""Royal Road"" functions), and present some initial experimental results concerning the role of crossover and ""building blocks"" on landscapes constructed from features of this class.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 8865, 35, 35], [35, 35, 35, 210871, 103515, 8865, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 8865, 35, 210871, 35, 273152, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 103515, 35061, 273152, 8865, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",1,1,1,1,1,1,1
35,436796,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Some Extensions of the K-Means Algorithm for Image Segmentation and Pattern Classification,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: In this paper we present some extensions to the k-means algorithm for vector quantization that permit its efficient use in image segmentation and pattern classification tasks. It is shown that by introducing state variables that correspond to certain statistics of the dynamic behavior of the algorithm, it is possible to find the representative centers of the lower dimensional manifolds that define the boundaries between classes, for clouds of multi-dimensional, multi-class data; this permits one, for example, to find class boundaries directly from sparse data (e.g., in image segmentation tasks) or to efficiently place centers for pattern classification (e.g., with local Gaussian classifiers). The same state variables can be used to define algorithms for determining adaptively the optimal number of centers for clouds of data with space-varying density. Some examples of the application of these extensions are also given. This report describes research done within CIMAT (Guanajuato, Mexico), the Center for Biological and Computational Learning in the Department of Brain and Cognitive Sciences, and at the Artificial Intelligence Laboratory. This research is sponsored by grants from the Office of Naval Research under contracts N00014-91-J-1270 and N00014-92-J-1879; by a grant from the National Science Foundation under contract ASC-9217041; and by a grant from the National Institutes of Health under contract NIH 2-S07-RR07047. Additional support is provided by the North Atlantic Treaty Organization, ATR Audio and Visual Perception Research Laboratories, Mitsubishi Electric Corporation, Sumitomo Metal Industries, and Siemens AG. Support for the A.I. Laboratory's artificial intelligence research is provided by ONR contract N00014-91-J-4038. J.L. Marroquin was supported in part by a grant from the Consejo Nacional de Ciencia y Tecnologia, Mexico.",Genetic_Algorithms,Neural_Networks,"[[82920, 210871, 910, 210872, 210872, 35, 1365], [35, 35, 436796, 35, 210871, 210871, 436796]]","[[82920, 210871, 82920, 910, 210872, 1365, 210872, 210872, 35061, 910, 44514, 35, 910, 77758, 35, 210871, 25702, 906, 273152, 5869, 35, 1365, 5462], [35, 35, 273152, 436796, 35, 77758, 210871, 273152, 210871, 5869, 210871, 273152, 5462, 910, 35061, 273152, 910, 910, 210871, 910, 210871, 436796, 910]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', ""Title: Biological metaphors and the design of modular artificial neural networks Master's thesis of, category:Genetic_Algorithms"", 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', ""Title: Biological metaphors and the design of modular artificial neural networks Master's thesis of, category:Genetic_Algorithms"", 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', ""Title: Analysis of Linsker's application of Hebbian rules to Linear Networks, category:Neural_Networks"", 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Induction of Multiscale Temporal Structure, category:Neural_Networks', 'Title: Hierarchical Mixtures of Experts and the EM Algorithm, category:Probabilistic_Methods', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Neural net architectures for temporal sequence processing, category:Neural_Networks', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', ""Title: Biological metaphors and the design of modular artificial neural networks Master's thesis of, category:Genetic_Algorithms"", 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Induction of Multiscale Temporal Structure, category:Neural_Networks', 'Title: A Quantitative Study of Experimental Evaluations of Neural Network Learning Algorithms: Current Research Practice, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Error-Correcting Output Codes: A General Method for Improving Multiclass Inductive Learning Programs, category:Theory', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A BENCHMARK FOR CLASSIFIER LEARNING, category:Rule_Learning', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Forward models: Supervised learning with a distal teacher, category:Reinforcement_Learning'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Neural net architectures for temporal sequence processing, category:Neural_Networks', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', ""Title: Biological metaphors and the design of modular artificial neural networks Master's thesis of, category:Genetic_Algorithms"", 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Proben1 A Set of Neural Network Benchmark Problems and Benchmarking Rules, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', 'Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks']]",0,0,0,0,0,0,0
35,1050679,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Diplomarbeit A Genetic Algorithm for the Topological Optimization of Neural Networks,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: We describe an integrated problem solving architecture named INBANCA in which Bayesian networks and case-based reasoning (CBR) work cooperatively on multiagent planning tasks. This includes two-team dynamic tasks, and this paper concentrates on simulated soccer as an example. Bayesian networks are used to characterize action selection whereas a case-based approach is used to determine how to implement actions. This paper has two contributions. First, we survey integrations of case-based and Bayesian approaches from the perspective of a popular CBR task decomposition framework, thus explaining what types of integrations have been attempted. This allows us to explain the unique aspects of our proposed integration. Second, we demonstrate how Bayesian nets can be used to provide environmental context, and thus feature selection information, for the case-based reasoner.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 427606, 35, 3229, 35797, 35], [35, 35, 35, 210871, 1050679, 427606, 1050679, 1050679, 210871]]","[[82920, 30817, 210871, 82920, 29492, 4330, 210872, 144408, 210872, 210872, 35061, 427606, 44514, 35, 29492, 6784, 35, 35, 36140, 210871, 1786, 273152, 3229, 35797, 35, 6184], [35, 3229, 35, 273152, 144408, 35797, 35, 3229, 210871, 273152, 210871, 1050679, 210871, 273152, 3229, 35797, 427606, 35061, 35797, 273152, 35797, 210871, 1050679, 1050679, 210871, 3229]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: A Promising genetic Algorithm Approach to Job-Shop Scheduling, Rescheduling, and Open-Shop Scheduling Problems, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Promising genetic Algorithm Approach to Job-Shop Scheduling, Rescheduling, and Open-Shop Scheduling Problems, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', ""Title: Analysis of Linsker's application of Hebbian rules to Linear Networks, category:Neural_Networks"", 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Induction of Multiscale Temporal Structure, category:Neural_Networks', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Neural net architectures for temporal sequence processing, category:Neural_Networks', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Promising genetic Algorithm Approach to Job-Shop Scheduling, Rescheduling, and Open-Shop Scheduling Problems, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Genetic Algorithms for Combinatorial Optimization: The Assembly Line Balancing Problem, category:Genetic_Algorithms', 'Title: Induction of Multiscale Temporal Structure, category:Neural_Networks', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: On the Virtues of Parameterized Uniform Crossover, category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Forward models: Supervised learning with a distal teacher, category:Reinforcement_Learning', 'Title: A Promising genetic Algorithm Approach to Job-Shop Scheduling, Rescheduling, and Open-Shop Scheduling Problems, category:Genetic_Algorithms', 'Title: An Evolutionary Approach to Combinatorial Optimization Problems, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Genetic Algorithms for Combinatorial Optimization: The Assembly Line Balancing Problem, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Neural net architectures for temporal sequence processing, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Approach to Combinatorial Optimization Problems, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: A Promising genetic Algorithm Approach to Job-Shop Scheduling, Rescheduling, and Open-Shop Scheduling Problems, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: On the Virtues of Parameterized Uniform Crossover, category:Genetic_Algorithms', 'Title: Distribution Category:  A Parallel Genetic Algorithm for the Set Partitioning Problem, category:Genetic_Algorithms', 'Title: Book Review  Introduction to the Theory of Neural Computation Reviewed by: 2, category:Neural_Networks', 'Title: Surgery, category:Genetic_Algorithms', 'Title: Stochastic Hillclimbing as a Baseline Method for Evaluating Genetic Algorithms, category:Genetic_Algorithms']]",1,0,1,0,0,0,0
35,139547,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: On Centering Neural Network Weight Updates,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Technical Report IDSIA-19-97 Abstract. It has long been known that neural networks can learn faster when their input and hidden unit activities are centered about zero; recently we have extended this approach to also encompass the centering of error signals (Schraudolph and Sejnowski, 1996). Here we generalize this notion to all factors involved in the weight update, leading us to propose centering the slope of hidden unit activation functions as well. Slope centering removes the linear component of backpropagated error; this improves credit assignment in networks with shortcut connections. Benchmark results show that this can speed up learning significantly without adversely affecting the trained network's generalization ability.",Genetic_Algorithms,Neural_Networks,"[[82920, 210871, 210872, 210872, 626999, 5348, 75695, 35, 5348], [35, 35, 35, 210871, 139547, 75695, 139547, 210871, 139547]]","[[82920, 8581, 210871, 82920, 210872, 210872, 210872, 35061, 626999, 44514, 5348, 75695, 35, 2696, 35, 210871, 5348, 273152, 35, 5348], [35, 75695, 35, 273152, 35, 210871, 273152, 210871, 139547, 210871, 75695, 139547, 273152, 5348, 35061, 273152, 2696, 210871, 210871, 139547]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Using Neural Networks and Genetic Algorithms as Heuristics for NP-Complete Problems, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: HGA: A Hardware-Based Genetic Algorithm, category:Genetic_Algorithms', 'Title: Using Neural Networks and Genetic Algorithms as Heuristics for NP-Complete Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Using Neural Networks and Genetic Algorithms as Heuristics for NP-Complete Problems, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Using Neural Networks and Genetic Algorithms as Heuristics for NP-Complete Problems, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: HGA: A Hardware-Based Genetic Algorithm, category:Genetic_Algorithms', 'Title: Using Neural Networks and Genetic Algorithms as Heuristics for NP-Complete Problems, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,0,1,1,1,1
35,1103960,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Surgery,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Object localization has applications in many areas of engineering and science. The goal is to spatially locate an arbitrarily-shaped object. In many applications, it is desirable to minimize the number of measurements collected for this purpose, while ensuring sufficient localization accuracy. In surgery, for example, collecting a large number of localization measurements may either extend the time required to perform a surgical procedure, or increase the radiation dosage to which a patient is exposed. Localization accuracy is a function of the spatial distribution of discrete measurements over an object when measurement noise is present. In [Simon et al., 1995a], metrics were presented to evaluate the information available from a set of discrete object measurements. In this study, new approaches to the discrete point data selection problem are described. These include hillclimbing, genetic algorithms (GAs), and Population-Based Incremental Learning (PBIL). Extensions of the standard GA and PBIL methods, which employ multiple parallel populations, are explored. The results of extensive empirical testing are provided. The results suggest that a combination of PBIL and hillclimbing result in the best overall performance. A computer-assisted surgical system which incorporates some of the methods presented in this paper is currently being evaluated in cadaver trials. Evolution-Based Methods for Selecting Point Data Shumeet Baluja was supported by a National Science Foundation Graduate Student Fellowship and a Graduate Student Fellowship from the National Aeronautics and Space Administration, administered by the Lyndon B. Johnson Space Center, Houston, TX. David Simon was partially supported by a National Science Foundation National Challenge grant (award IRI-9422734). for Object Localization: Applications to",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 3229, 33895, 33904, 35, 33907, 35, 35, 33895], [35, 35, 35, 210871, 1103960, 33904, 1103960, 33904, 1103960, 210871, 33907, 1103960]]","[[82920, 30817, 35, 210871, 14062, 82920, 29492, 210872, 144408, 210872, 210872, 3229, 35061, 35, 33895, 44514, 35, 97645, 29492, 33904, 35, 97390, 58758, 35, 210871, 33907, 273152, 35, 14062, 35, 6184, 33895, 503893], [35, 3229, 97645, 35, 33907, 273152, 144408, 35, 3229, 210871, 273152, 1103960, 210871, 503893, 33904, 210871, 273152, 33907, 3229, 1103960, 33904, 33907, 33895, 35061, 273152, 1103960, 210871, 210871, 97390, 33907, 3229, 1103960, 33904]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning Monitoring Strategies: A Difficult Genetic Programming Application, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning Monitoring Strategies: A Difficult Genetic Programming Application, category:Genetic_Algorithms', 'Title: Monitoring in Embedded Agents, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Monitoring in Embedded Agents, category:Genetic_Algorithms']]","[['Title: Generalized Markov Decision Processes: Dynamic-programming and Reinforcement-learning Algorithms, category:Reinforcement_Learning', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Strategy Learning with Multilayer Connectionist Representations 1, category:Reinforcement_Learning', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Strategy Learning with Multilayer Connectionist Representations 1, category:Reinforcement_Learning', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Machine Learning Learning to Predict by the Methods of Temporal Differences Keywords: Incremental learning, prediction,, category:Reinforcement_Learning', 'Title: References elements that can solve difficult learning control problems. on Simulation of Adaptive Behavior, pages, category:Reinforcement_Learning', 'Title: References elements that can solve difficult learning control problems. on Simulation of Adaptive Behavior, pages, category:Reinforcement_Learning', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Machine Learning Learning to Predict by the Methods of Temporal Differences Keywords: Incremental learning, prediction,, category:Reinforcement_Learning', 'Title: References elements that can solve difficult learning control problems. on Simulation of Adaptive Behavior, pages, category:Reinforcement_Learning', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning Monitoring Strategies: A Difficult Genetic Programming Application, category:Genetic_Algorithms'], ['Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Machine Learning Learning to Predict by the Methods of Temporal Differences Keywords: Incremental learning, prediction,, category:Reinforcement_Learning', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: Strategy Learning with Multilayer Connectionist Representations 1, category:Reinforcement_Learning', 'Title: Machine Learning Learning to Predict by the Methods of Temporal Differences Keywords: Incremental learning, prediction,, category:Reinforcement_Learning', 'Title: Learning Monitoring Strategies: A Difficult Genetic Programming Application, category:Genetic_Algorithms', 'Title: Strategy Learning with Multilayer Connectionist Representations 1, category:Reinforcement_Learning', 'Title: Integrated Architectures for Learning, Planning, and Reacting Based on Approximating Dynamic Programming, category:Reinforcement_Learning', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Monitoring in Embedded Agents, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Monitoring in Embedded Agents, category:Genetic_Algorithms']]",1,1,0,1,1,1,1
35,227178,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Evolving Visual Routines,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Traditional machine vision assumes that the vision system recovers a a complete, labeled description of the world [ Marr, 1982 ] . Recently, several researchers have criticized this model and proposed an alternative model which considers perception as a distributed collection of task-specific, task-driven visual routines [ Aloimonos, 1993, Ullman, 1987 ] . Some of these researchers have argued that in natural living systems these visual routines are the product of natural selection [ Ramachandran, 1985 ] . So far, researchers have hand-coded task-specific visual routines for actual implementations (e.g. [ Chapman, 1993 ] ). In this paper we propose an alternative approach in which visual routines for simple tasks are evolved using an artificial evolution approach. We present results from a series of runs on actual camera images, in which simple routines were evolved using Genetic Programming techniques [ Koza, 1992 ] . The results obtained are promising: the evolved routines are able to correctly classify up to 93% of the images, which is better than the best algorithm we were able to write by hand.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 44455, 35], [35, 35, 35, 210871, 227178, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 44455, 35, 41714, 210871, 44455, 273152, 35, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 227178, 35061, 44455, 273152, 41714, 210871, 41714, 210871]]","[['Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Information filtering: Selection mechanisms in learning systems. Machine Learning, 10:113-151, 1993. Generalization as search. Artificial, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Information filtering: Selection mechanisms in learning systems. Machine Learning, 10:113-151, 1993. Generalization as search. Artificial, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Evolution of Mapmaking: Learning, planning, and memory using Genetic Programming, category:Genetic_Algorithms', 'Title: Information filtering: Selection mechanisms in learning systems. Machine Learning, 10:113-151, 1993. Generalization as search. Artificial, category:Genetic_Algorithms', 'Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Some studies in machine learning using the game of checkers. IBM Journal, 3(3):211-229, 1959. Some, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: The Automatic Programming of Agents that Learn Mental Models and Create Simple Plans of Action, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,0,1,0,1,1
35,1103985,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: HGA: A Hardware-Based Genetic Algorithm,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: A genetic algorithm (GA) is a robust problem-solving method based on natural selection. Hardware's speed advantage and its ability to parallelize offer great rewards to genetic al gorithms. Speedups of 1-3 orders of magnitude have been observed when frequently used software routines were im plemented in hardware by way of reprogrammable field-pro grammable gate arrays (FPGAs). Reprogrammability is es sential in a general-purpose GA engine because certain GA modules require changeability (e.g. the function to be opti mized by the GA). Thus a hardware-based GA is both feasi ble and desirable. A fully functional hardware-based genetic algorithm (the HGA) is presented here as a proof-of-concept system. It was designed using VHDL to allow for easy scala bility. It is designed to act as a coprocessor with the CPU of a PC. The user programs the FPGAs which implement the function to be optimized. Other GA parameters may also be specified by the user. Simulation results and performance analyses of the HGA are presented. A prototype HGA is de scribed and compared to a similar GA implemented in soft ware. In the simple tests, the prototype took about 6% as many clock cycles to run as the software-based GA. Further suggested improvements could realistically make the HGA 2-3 orders of magnitude faster than the software-based GA.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 1688, 35, 35], [35, 35, 35, 210871, 1103985, 1688, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 58758, 35, 1688, 35, 210871, 273152, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 1688, 35061, 1103985, 1688, 273152, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Generalization and scaling in reinforcement learning, category:Reinforcement_Learning'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Genetic Programming and Data Structures, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: References ""Using Neural Networks to Identify Jets"", Kohonen, ""Self Organized Formation of Topologically Correct Feature, category:Neural_Networks', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Back Propagation is Sensitive to Initial Conditions, category:Neural_Networks', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', ""Title: The Schema Theorem and Price's Theorem, category:Genetic_Algorithms"", 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', ""Title: The Schema Theorem and Price's Theorem, category:Genetic_Algorithms"", 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Genetic Programming with One-Point Crossover and Point Mutation, category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Troubling Aspects of a Building Block Hypothesis for Genetic Programming, category:Genetic_Algorithms', 'Title: Back Propagation is Sensitive to Initial Conditions, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Generalization and scaling in reinforcement learning, category:Reinforcement_Learning'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', ""Title: The Schema Theorem and Price's Theorem, category:Genetic_Algorithms"", 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: The Troubling Aspects of a Building Block Hypothesis for Genetic Programming, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: The Troubling Aspects of a Building Block Hypothesis for Genetic Programming, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Auto-teaching: networks that develop their own teaching input, category:Genetic_Algorithms', 'Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in, category:Genetic_Algorithms', 'Title: Learning and evolution in neural networks, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Modeling the Evolution of Motivation, category:Genetic_Algorithms']]",1,0,1,1,1,1,1
35,1117833,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Automatic Storage and Indexing of Plan Derivations based on Replay Failures,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: When a case-based planner is retrieving a previous case in preparation for solving a new similar problem, it is often not aware of all of the implicit features of the new problem situation which determine if a particular case may be successfully applied. This means that some cases may fail to improve the planner's performance. By detecting and explaining these case failures as they occur, retrieval may be improved incrementally. In this paper we provide a definition of case failure for the case-based planner, dersnlp (derivation replay in snlp), which solves new problems by replaying its previous plan derivations. We provide explanation-based learning (EBL) techniques for detecting and constructing the reasons for the case failure. We also describe how the case library is organized so as to incorporate this failure information as it is produced. Finally we present an empirical study which demonstrates the effectiveness of this approach in improving the performance of dersnlp.",Genetic_Algorithms,Case_Based,"[[82920, 210871, 210872, 210872, 5600, 35], [35, 35, 35, 210871, 1117833, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 54550, 35, 210871, 5600, 273152, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 5600, 35061, 273152, 1117833, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: A Comparison of Selection Schemes used in Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Genetic Algorithms, Tournament Selection, and the Effects of Noise, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Determining Successful Negotiation Strategies: An Evolutionary Approach, category:Genetic_Algorithms', 'Title: A Comparison of Selection Schemes used in Genetic Algorithms, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Determining Successful Negotiation Strategies: An Evolutionary Approach, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: A Comparison of Selection Schemes used in Genetic Algorithms, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Genetic Algorithms, Tournament Selection, and the Effects of Noise, category:Genetic_Algorithms', 'Title: Genetic Programming and Redundancy, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Determining Successful Negotiation Strategies: An Evolutionary Approach, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: A Comparison of Selection Schemes used in Genetic Algorithms, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Genetic Programming and Redundancy, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Determining Successful Negotiation Strategies: An Evolutionary Approach, category:Genetic_Algorithms', 'Title: A Comparison of Selection Schemes used in Genetic Algorithms, category:Genetic_Algorithms']]",0,1,1,0,0,0,0
35,1109199,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Monitoring in Embedded Agents,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Finding good monitoring strategies is an important process in the design of any embedded agent. We describe the nature of the monitoring problem, point out what makes it difficult, and show that while periodic monitoring strategies are often the easiest to derive, they are not always the most appropriate. We demonstrate mathematically and empirically that for a wide class of problems, the so-called ""cupcake problems"", there exists a simple strategy, interval reduction, that outperforms periodic monitoring. We also show how features of the environment may influence the choice of the optimal strategy. The paper concludes with some thoughts about a monitoring strategy taxonomy, and what its defining features might be.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 35, 6214, 35, 148170], [35, 35, 35, 210871, 148170, 1109199, 210871, 1109199]]","[[117, 82920, 210871, 6151, 82920, 6151, 210872, 210872, 210872, 35061, 44514, 35, 6213, 4584, 4584, 35, 6213, 4584, 35, 6214, 210871, 273152, 35, 148170], [6214, 35, 35, 6214, 273152, 6213, 35, 210871, 273152, 210871, 210871, 273152, 6214, 6151, 6213, 148170, 6151, 6214, 35061, 1109199, 273152, 210871, 210871, 1109199]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Modeling Simple Genetic Algorithms for Permutation Problems, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Using Markov Chains to Analyze GAFOs, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Modeling Simple Genetic Algorithms for Permutation Problems, category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Modeling Simple Genetic Algorithms for Permutation Problems, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Staged Hybrid Genetic Search for Seismic Data Imaging, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Using Markov Chains to Analyze GAFOs, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Staged Hybrid Genetic Search for Seismic Data Imaging, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Staged Hybrid Genetic Search for Seismic Data Imaging, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Modeling Simple Genetic Algorithms for Permutation Problems, category:Genetic_Algorithms', 'Title: Evaluating Evolutionary Algorithms, category:Genetic_Algorithms', 'Title: Island Model Genetic Algorithms and Linearly Separable Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",1,0,1,0,1,1,1
35,1127558,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Bayesian Models for Non-Linear Autoregressions,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: This paper argues that Bayesian probability theory is a general method for machine learning. From two well-founded axioms, the theory is capable of accomplishing learning tasks that are incremental or non-incremental, supervised or unsupervised. It can learn from different types of data, regardless of whether they are noisy or perfect, independent facts or behaviors of an unknown machine. These capabilities are (partially) demonstrated in the paper through the uniform application of the theory to two typical types of machine learning: incremental concept learning and unsupervised data classification. The generality of the theory suggests that the process of learning may not have so many different ""types"" as currently held, and the method that is the oldest may be the best after all.",Genetic_Algorithms,Probabilistic_Methods,"[[82920, 67584, 210871, 210872, 210872, 561809, 35], [35, 1127558, 35, 35, 210871, 1127558, 210871]]","[[82920, 67584, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 561809, 35, 210871, 273152, 35], [35, 1127558, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 1127558, 35061, 273152, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Causality in Genetic Programming, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Hierarchical Self-Organization in Genetic Programming, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Hierarchical Self-Organization in Genetic Programming, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Causality in Genetic Programming, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Hierarchical Self-Organization in Genetic Programming, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Hierarchical Self-Organization in Genetic Programming, category:Genetic_Algorithms']]",0,0,0,1,0,0,0
35,1112911,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Evolution of Iteration in Genetic Programming D a v d A The solution to many,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: This paper introduces the new operation of restricted iteration creation that automatically Genetic programming extends Holland's genetic algorithm to the task of automatic programming. Early work on genetic programming demonstrated that it is possible to evolve a sequence of work-performing steps in a single result-producing branch (that is, a one-part ""main"" program). The book Genetic Programming: On the Programming of Computers by Means of Natural Selection (Koza 1992) describes an extension of Holland's genetic algorithm in which the genetic population consists of computer programs (that is, compositions of primitive functions and terminals). See also Koza and Rice (1992). In the most basic form of genetic programming (where only a single result-producing branch is evolved), genetic programming demonstrated the capability to discover a sequence (as to both its length and its content) of work-performing steps that is sufficient to produce a satisfactory solution to several problems, including many problems that have been used over the years as benchmarks in machine learning and artificial intelligence. Before applying genetic programming to a problem, the user must perform five major preparatory steps, namely identifying the terminals (inputs) of the to-be-evolved programs, identifying the primitive functions (operations) contained in the to-be-evolved programs, creating the fitness measure for evaluating how well a given program does at solving the problem at hand, choosing certain control parameters (notably population size and number of generations to be run), and determining the termination criterion and method of result designation (typically the best-so-far individual from the populations produced during the run). creates a restricted iteration-performing",Genetic_Algorithms,Genetic_Algorithms,"[[210871, 82920, 210871, 210872, 210872, 22229, 144701, 22229, 887, 35, 144701, 35], [887, 35, 35, 35, 210871, 1112911, 1112911, 144701, 1112911, 887, 22229, 210871]]","[[210871, 82920, 210871, 82920, 210872, 210872, 210872, 35, 35061, 35061, 44514, 35, 22229, 35061, 144701, 22229, 210871, 198653, 35, 887, 210871, 35, 273152, 144701, 35], [887, 35, 35, 273152, 35, 210871, 273152, 198653, 210871, 22229, 210871, 273152, 1112911, 144701, 1112911, 144701, 198653, 887, 35061, 1112911, 273152, 887, 210871, 22229, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Computer Evolution of Buildable Objects for Evolutionary Design by Computers, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Preliminary Investigation of Evolution as a Form Design Strategy, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Computer Evolution of Buildable Objects for Evolutionary Design by Computers, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Preliminary Investigation of Evolution as a Form Design Strategy, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",1,0,0,1,1,1,1
35,8591,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Limits of Control Flow on Parallelism,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: This paper discusses three techniques useful in relaxing the constraints imposed by control flow on parallelism: control dependence analysis, executing multiple flows of control simultaneously, and speculative execution. We evaluate these techniques by using trace simulations to find the limits of parallelism for machines that employ different combinations of these techniques. We have three major results. First, local regions of code have limited parallelism, and control dependence analysis is useful in extracting global parallelism from different parts of a program. Second, a superscalar processor is fundamentally limited because it cannot execute independent regions of code concurrently. Higher performance can be obtained with machines, such as multiprocessors and dataflow machines, that can simultaneously follow multiple flows of control. Finally, without speculative execution to allow instructions to execute before their control dependences are resolved, only modest amounts of parallelism can be obtained for programs with complex control flow.",Genetic_Algorithms,Rule_Learning,"[[82920, 210871, 210872, 210872, 8594, 35], [35, 35, 35, 210871, 8591, 210871]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 8594, 44514, 35, 35, 210871, 273152, 35], [35, 35, 273152, 35, 210871, 273152, 210871, 8591, 210871, 273152, 35061, 273152, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Adapting Crossover in a Genetic Algorithm, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Dynamic Parameter Encoding for Genetic Algorithms, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: On The State of Evolutionary Computation, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,1,0,1,0,0
35,1113438,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Modeling the Evolution of Motivation,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: In order for learning to improve the adaptiveness of an animal's behavior and thus direct evolution in the way Baldwin suggested, the learning mechanism must incorporate an innate evaluation of how the animal's actions influence its reproductive fitness. For example, many circumstances that damage an animal, or otherwise reduce its fitness are painful and tend to be avoided. We refer to the mechanism by which an animal evaluates the fitness consequences of its actions as a ""motivation system,"" and argue that such a system must evolve along with the behaviors it evaluates. We describe simulations of the evolution of populations of agents instantiating a number of different architectures for generating action and learning, in worlds of differing complexity. We find that in some cases, members of the populations evolve motivation systems that are accurate enough to direct learning so as to increase the fitness of the actions the agents perform. Furthermore, the motivation systems tend to incorporate systematic distortions in their representations of the worlds they inhabit; these distortions can increase the adaptiveness of the behavior generated.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 35061, 240791, 35061, 35, 141324, 35061, 35, 35852], [35, 35, 35, 210871, 210871, 1113438, 1113438, 35061, 1113438, 240791, 210871, 1113438]]","[[82920, 210871, 82920, 210872, 94639, 210872, 210872, 19621, 141342, 35, 35061, 35, 240791, 240791, 32083, 44514, 35061, 35061, 35, 35, 45605, 66556, 35, 66556, 210871, 66564, 141324, 273152, 35061, 54131, 32083, 35, 35852], [35, 35, 273152, 35, 141324, 210871, 273152, 240791, 35061, 66556, 210871, 54131, 1113438, 45605, 35061, 210871, 45605, 1113438, 273152, 141342, 240791, 54131, 35061, 141324, 273152, 141324, 1113438, 210871, 240791, 141324, 45605, 210871, 1113438]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Generative Learning Structures and Processes for Generalized Connectionist Networks, category:Neural_Networks', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: Generative Learning Structures and Processes for Generalized Connectionist Networks, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Generative Learning Structures and Processes for Generalized Connectionist Networks, category:Neural_Networks', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Forward models: Supervised learning with a distal teacher, category:Reinforcement_Learning', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: BRAINSTRUCTURED CONNECTIONIST NETWORKS THAT PERCEIVE AND LEARN, category:Neural_Networks', 'Title: Generative Learning Structures and Processes for Generalized Connectionist Networks, category:Neural_Networks', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: Combining Connectionist and Symbolic Learning to Refine Certainty-Factor Rule Bases, category:Probabilistic_Methods', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Comparative Study of ID3 and Backpropagation for English Text-to-Speech Mapping, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Refining PID Controllers using Neural Networks, category:Neural_Networks', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Perceptual Development and Learning: From Behavioral, Neurophysiological, and Morphological Evidence To Computational Models, category:Neural_Networks', 'Title: Perceptual Development and Learning: From Behavioral, Neurophysiological, and Morphological Evidence To Computational Models, category:Neural_Networks'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: Symbolic and Subsymbolic Learning for Vision: Some Possibilities, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Framework for Combining Symbolic and Neural Learning rule extraction from neural networks the KBANN algorithm, category:Neural_Networks', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Some Biases for Efficient Learning of Spatial, Temporal, and Spatio-Temporal Patterns, category:Neural_Networks', 'Title: BRAINSTRUCTURED CONNECTIONIST NETWORKS THAT PERCEIVE AND LEARN, category:Neural_Networks']]",1,0,0,1,1,1,1
35,1129443,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Characterising Innateness in Artificial and Natural Learning,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: The purpose of this paper is to propose a refinement of the notion of innateness. If we merely identify innateness with bias, then we obtain a poor characterisation of this notion, since any learning device relies on a bias that makes it choose a given hypothesis instead of another. We show that our intuition of innateness is better captured by a characteristic of bias, related to isotropy. Generalist models of learning are shown to rely on an isotropic bias, whereas the bias of specialised models, which include some specific a priori knowledge about what is to be learned, is necessarily anisotropic. The socalled generalist models, however, turn out to be specialised in some way: they learn symmetrical forms preferentially, and have strictly no deficiencies in their learning ability. Because some learning beings do not always show these two properties, such generalist models may be sometimes ruled out as bad candidates for cognitive modelling.",Genetic_Algorithms,Neural_Networks,"[[82920, 210871, 1365, 210872, 210872, 35], [35, 35, 1129443, 35, 210871, 210871]]","[[82920, 210871, 1365, 82920, 210872, 210872, 210872, 35061, 44514, 35, 35, 210871, 273152, 35], [35, 35, 1129443, 273152, 35, 210871, 273152, 210871, 210871, 273152, 35061, 273152, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Efficient Inference in Bayes Networks As A Combinatorial Optimization Problem, category:Probabilistic_Methods', 'Title: Decision-Theoretic Case-Based Reasoning, category:Probabilistic_Methods', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: LIBGA: A USER-FRIENDLY WORKBENCH FOR ORDER-BASED GENETIC ALGORITHM RESEARCH, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms', 'Title: LIBGA: A USER-FRIENDLY WORKBENCH FOR ORDER-BASED GENETIC ALGORITHM RESEARCH, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Efficient Inference in Bayes Networks As A Combinatorial Optimization Problem, category:Probabilistic_Methods', 'Title: Generation Gaps Revisited, category:Genetic_Algorithms', 'Title: Decision-Theoretic Case-Based Reasoning, category:Probabilistic_Methods', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: LIBGA: A USER-FRIENDLY WORKBENCH FOR ORDER-BASED GENETIC ALGORITHM RESEARCH, category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms', 'Title: LIBGA: A USER-FRIENDLY WORKBENCH FOR ORDER-BASED GENETIC ALGORITHM RESEARCH, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: LIBGA: A USER-FRIENDLY WORKBENCH FOR ORDER-BASED GENETIC ALGORITHM RESEARCH, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Case-Based Probability Factoring in Bayesian Belief Networks, category:Genetic_Algorithms']]",0,0,0,1,0,0,0
35,1113831,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Determining Successful Negotiation Strategies: An Evolutionary Approach,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: To be successful in open, multi-agent environments, autonomous agents must be capable of adapting their negotiation strategies and tactics to their prevailing circumstances. To this end, we present an empirical study showing the relative success of different strategies against different types of opponent in different environments. In particular, we adopt an evolutionary approach in which strategies and tactics correspond to the genetic material in a genetic algorithm. We conduct a series of experiments to determine the most successful strategies and to see how and when these strategies evolve depending on the context and negotiation stance of the agent's opponent.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 210872, 210872, 248425, 35, 35, 248431], [35, 35, 35, 210871, 1113831, 248425, 210871, 1113831]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 248425, 44514, 35, 35, 35, 35, 210871, 273152, 35, 248431, 579008], [35, 35, 273152, 35, 210871, 273152, 210871, 1113831, 210871, 273152, 248425, 35061, 579008, 273152, 210871, 210871, 1113831, 248425]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: In Machine Learning: A Multistrategy Approach, Vol. IV  Macro and Micro Perspectives of Multistrategy Learning, category:Case_Based', 'Title: Classification by Pairwise Coupling, category:Theory', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning Boolean Concepts in the Presence of Many Irrelevant Features, category:Theory', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: Oblivious Decision Trees and Abstract Cases, category:Case_Based', 'Title: Using Decision Trees to Improve Case-Based Learning, category:Case_Based', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Estimating Attributes: Analysis and Extensions of RELIEF, category:Rule_Learning', 'Title: In Machine Learning: A Multistrategy Approach, Vol. IV  Macro and Micro Perspectives of Multistrategy Learning, category:Case_Based', 'Title: Prototype and Feature Selection by Sampling and Random Mutation Hill Climbing Algorithms, category:Case_Based', 'Title: Oblivious Decision Trees and Abstract Cases, category:Case_Based', 'Title: Classification by Pairwise Coupling, category:Theory', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Learning Boolean Concepts in the Presence of Many Irrelevant Features, category:Theory', 'Title: Learning Boolean Concepts in the Presence of Many Irrelevant Features, category:Theory', 'Title: Using Decision Trees to Improve Case-Based Learning, category:Case_Based', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Learning Boolean Concepts in the Presence of Many Irrelevant Features, category:Theory'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Oblivious Decision Trees and Abstract Cases, category:Case_Based', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: Prototype and Feature Selection by Sampling and Random Mutation Hill Climbing Algorithms, category:Case_Based', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: 21 Using n 2 classifier in constructive induction, category:Theory', 'Title: Prototype and Feature Selection by Sampling and Random Mutation Hill Climbing Algorithms, category:Case_Based', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Irrelevant Features and the Subset Selection Problem, category:Theory', 'Title: Using Decision Trees to Improve Case-Based Learning, category:Case_Based', 'Title: Oblivious Decision Trees and Abstract Cases, category:Case_Based', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Prototype and Feature Selection by Sampling and Random Mutation Hill Climbing Algorithms, category:Case_Based']]",1,0,0,1,1,1,1
35,714879,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: The New Challenge: From a Century of Statistics to an Age of Causation,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Some of the main users of statistical methods - economists, social scientists, and epidemiologists are discovering that their fields rest not on statistical but on causal foundations. The blurring of these foundations over the years follows from the lack of mathematical notation capable of distinguishing causal from equational relationships. By providing formal and natural explication of such relations, graphical methods have the potential to revolutionize how statistics is used in knowledge-rich applications. Statisticians, in response, are beginning to realize that causality is not a metaphysical dead-end but a meaningful concept with clear mathematical underpinning. The paper surveys these developments and outlines future challenges.",Genetic_Algorithms,Probabilistic_Methods,"[[82920, 210871, 73162, 210872, 210872, 73162, 714260, 73162, 189774, 35], [35, 35, 189774, 35, 210871, 714879, 714879, 714260, 714879, 210871]]","[[82920, 210871, 82920, 73162, 210872, 210872, 210872, 73162, 714260, 35061, 44514, 35, 35, 714256, 189655, 73162, 714208, 210871, 189774, 273152, 73162, 653441, 35], [35, 35, 273152, 189774, 35, 210871, 273152, 714879, 714879, 210871, 210871, 273152, 35061, 714260, 714260, 714260, 189774, 273152, 714879, 210871, 653441, 189774, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: A Study of Genetic Algorithms to Find Approximate Solutions to Hard 3CNF Problems, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolution in Time and Space The Parallel Genetic Algorithm, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: A Study of Genetic Algorithms to Find Approximate Solutions to Hard 3CNF Problems, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,0,1,1,1,1
35,1114331,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: Island Model Genetic Algorithms and Linearly Separable Problems,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: Parallel Genetic Algorithms have often been reported to yield better performance than Genetic Algorithms which use a single large panmictic population. In the case of the Island Model Genetic Algorithm, it has been informally argued that having multiple subpopulations helps to preserve genetic diversity, since each island can potentially follow a different search trajectory through the search space. On the other hand, linearly separable functions have often been used to test Island Model Genetic Algorithms; it is possible that Island Models are particular well suited to separable problems. We look at how Island Models can track multiple search trajectories using the infinite population models of the simple genetic algorithm. We also introduce a simple model for better understanding when Island Model Genetic Algorithms may have an advantage when processing linearly separable problems.",Genetic_Algorithms,Genetic_Algorithms,"[[82920, 210871, 259701, 210872, 85352, 210872, 35, 35, 259702, 35, 82920, 134199, 35], [35, 35, 1114331, 35, 1114331, 210871, 259702, 85352, 1114331, 259701, 259702, 1114331, 210871]]","[[82920, 210871, 259701, 82920, 35, 210872, 85352, 210872, 210872, 35, 640617, 35061, 35, 44514, 35, 259702, 85352, 35, 210871, 35, 82920, 134199, 273152, 35], [35, 35, 1114331, 273152, 640617, 35, 1114331, 210871, 273152, 259702, 259702, 210871, 85352, 210871, 273152, 1114331, 640617, 35061, 273152, 259701, 259702, 1114331, 210871, 210871]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Dynamic Hill Climbing: Overcoming the limita- tions of optimization techniques, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: Dynamic Hill Climbing: Overcoming the limita- tions of optimization techniques, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: Dynamic Hill Climbing: Overcoming the limita- tions of optimization techniques, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Dynamic Hill Climbing: Overcoming the limita- tions of optimization techniques, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: The Royal Road for Genetic Algorithms: Fitness Landscapes and GA Performance, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: THE OPTIONS DESIGN EXPLORATION SYSTEM Reference Manual and User Guide Version B2.1, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Using Genetic Algorithms to Explore Pattern Recognition in the Immune System  COMMENTS WELCOME, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",1,0,1,1,1,1,1
35,228992,"Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley.",Title: AMASS: A Structured Pattern Matching Approach to Shotgun Sequence Assembly,"Abstract: To implement a specific application, you should only have to change the file app.c. Section 2 describes the routines in app.c in detail. If you use additional variables for your specific problem, the easiest method of making them available to other program units is to declare them in sga.h and external.h. However, take care that you do not redeclare existing variables. Two example applications files are included in the SGA-C distribution. The file app1.c performs the simple example problem included with the Pascal version; finding the maximum of x 10 , where x is an integer interpretation of a chromosome. A slightly more complex application is include in app2.c. This application illustrates two features that have been added to SGA-C. The first of these is the ithruj2int function, which converts bits i through j in a chromosome to an integer. The second new feature is the utility pointer that is associated with each population member. The example application interprets each chromosome as a set of concatenated integers in binary form. The lengths of these integer fields is determined by the user-specified value of field size, which is read in by the function app data(). The field size must be less than the smallest of the chromosome length and the length of an unsigned integer. An integer array for storing the interpreted form of each chromosome is dynamically allocated and assigned to the chromosome's utility pointer in app malloc(). The ithruj2int routine (see utility.c) is used to translate each chromosome into its associated vector. The fitness for each chromosome is simply the sum of the squares of these integers. This example application will function for any chromosome length. SGA-C is intended to be a simple program for first-time GA experimentation. It is not intended to be definitive in terms of its efficiency or the grace of its implementation. The authors are interested in the comments, criticisms, and bug reports from SGA-C users, so that the code can be refined for easier use in subsequent versions. Please email your comments to rob@galab2.mh.ua.edu, or write to TCGA: The authors gratefully acknowledge support provided by NASA under Grant NGT-50224 and support provided by the National Science Foundation under Grant CTS-8451610. We also thank Hillol Kargupta for donating his tournament selection implementation. Booker, L. B. (1982). Intelligent behavior as an adaptation to the task environment (Doctoral dissertation, Technical Report No. 243. Ann Arbor: University of Michigan, Logic of Computers Group). Dissertations Abstracts International, 43(2), 469B. (University Microfilms No. 8214966)","Abstract: In this paper, we propose an efficient, reliable shotgun sequence assembly algorithm based on a fingerprinting scheme that is robust to both noise and repetitive sequences in the data. Our algorithm uses exact matches of short patterns randomly selected from fragment data to identify fragment overlaps, construct an overlap map, and finally deliver a consensus sequence. We show how statistical clues made explicit in our approach can easily be exploited to correctly assemble results even in the presence of extensive repetitive sequences. Our approach is exceptionally fast in practice: e.g., we have successfully assembled a whole Mycoplasma genitalium genome (approximately 580 kbps) in roughly 8 minutes of 64MB 200MHz Pentium Pro CPU time from real shotgun data, where most existing algorithms can be expected to run for several hours to a day on the same data. Moreover, experiments with shotgun data synthetically prepared from real DNA sequences from a wide range of organisms (including human DNA) and containing extensive repeating regions demonstrate our algorithm's robustness to noise and the presence of repetitive sequences. For example, we have correctly assembled a 238kbp Human DNA sequence in less than 3 minutes of 64MB 200MHz Pentium Pro CPU time. fl Support for this research was provided in part by the Office of Naval Research through grant N0014-94-1-1178.",Genetic_Algorithms,Neural_Networks,"[[82920, 210871, 210872, 210872, 35, 228990], [35, 35, 35, 210871, 210871, 228992]]","[[82920, 210871, 82920, 210872, 210872, 210872, 35061, 44514, 35, 35, 210871, 273152, 35, 228990], [35, 35, 273152, 35, 210871, 273152, 210871, 210871, 273152, 35061, 273152, 210871, 210871, 228992]]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: The Application of a Parallel Genetic Algorithm to the n=m=P=C max Flowshop Problem, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]","[['Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: A Survey of Evolution Strategies, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: An Evolutionary Algorithm that Constructs Recurrent Neural Networks, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: The Observers Paradox: Apparent Computational Complexity in Physical Systems, category:Neural_Networks', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Control of Parallel Population Dynamics by Social-Like Behavior of GA-Individuals, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms'], ['Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: 4 Implementing Application Specific Routines  Genetic algorithms in search, optimization, and machine learning. Reading, MA: Addison-Wesley., category:Genetic_Algorithms', 'Title: Control of Parallel Population Dynamics by Social-Like Behavior of GA-Individuals, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: The Application of a Parallel Genetic Algorithm to the n=m=P=C max Flowshop Problem, category:Genetic_Algorithms', 'Title: Evolving Networks: Using the Genetic Algorithm with Connectionist Learning, category:Genetic_Algorithms', 'Title: A Generalized Permutation Approach to Job Shop Scheduling with Genetic Algorithms, category:Genetic_Algorithms', 'Title: Evolutionary Module Acquisition, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms', 'Title: Coevolving High-Level Representations, category:Genetic_Algorithms']]",0,0,0,0,1,0,0
,,,,,,,,,,,,,0.6,0.65,0.65,0.75,0.8,0.8
